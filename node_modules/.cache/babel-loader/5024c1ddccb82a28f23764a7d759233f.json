{"ast":null,"code":"var _jsxFileName = \"/home/kfederer/code/federerkristijan/05-udemy-react-class-bassed-componenets/src/components/UserFinder.js\";\nimport { Fragment, useState, useEffect, Component } from \"react\";\nimport classes from \"./UserFinder.module.css\";\nimport UsersContext from '../store/users-context';\nimport Users from \"./Users\"; // const DUMMY_USERS = [\n//   { id: \"u1\", name: \"Max\" },\n//   { id: \"u2\", name: \"Manuel\" },\n//   { id: \"u3\", name: \"Julie\" },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserFinder extends Component {\n  // contextType property can be set just once!\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      searchTerm: \"\"\n    };\n  } // if filteredUsers needs to fetch data from http\n\n\n  componentDidMount() {\n    // sending http request\n    this.setState({\n      filteredUsers: this.context.users\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: this.context.users.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n\n  searchChangeHandler(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(this.state.searchTerm))\n//     );\n//   }, [searchTerm]);\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n//   // return (\n//   //   <Fragment>\n//   //     <div className={classes.finder}>\n//   //       <input type='search' onChange={searchChangeHandler} />\n//   //       </div>\n//   //     <Users users={filteredUsers} />\n//   //   </Fragment>\n//   // );\n// };\n\n\nUserFinder.contextType = UsersContext;\nexport default UserFinder;","map":{"version":3,"names":["Fragment","useState","useEffect","Component","classes","UsersContext","Users","UserFinder","constructor","state","filteredUsers","searchTerm","componentDidMount","setState","context","users","componentDidUpdate","prevProps","prevState","filter","user","name","includes","searchChangeHandler","event","target","value","render","finder","bind","contextType"],"sources":["/home/kfederer/code/federerkristijan/05-udemy-react-class-bassed-componenets/src/components/UserFinder.js"],"sourcesContent":["import { Fragment, useState, useEffect, Component } from \"react\";\nimport classes from \"./UserFinder.module.css\";\nimport UsersContext from '../store/users-context';\n\nimport Users from \"./Users\";\n\n// const DUMMY_USERS = [\n//   { id: \"u1\", name: \"Max\" },\n//   { id: \"u2\", name: \"Manuel\" },\n//   { id: \"u3\", name: \"Julie\" },\n// ];\n\nclass UserFinder extends Component {\n  // contextType property can be set just once!\n  static contextType = UsersContext;\n\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      searchTerm: \"\",\n    };\n  }\n\n  // if filteredUsers needs to fetch data from http\n  componentDidMount() {\n    // sending http request\n    this.setState({ filteredUsers: this.context.users })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: this.context.users.filter((user) =>\n          user.name.includes(this.state.searchTerm)\n        ),\n      });\n    }\n  }\n\n  searchChangeHandler(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className={classes.finder}>\n          <input type=\"search\" onChange={this.searchChangeHandler.bind(this)} />\n        </div>\n        <ErrorBoundary></ErrorBoundary>\n        <Users users={this.state.filteredUsers} />\n      </Fragment>\n    );\n  }\n}\n\n// const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(this.state.searchTerm))\n//     );\n//   }, [searchTerm]);\n\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n\n//   // return (\n//   //   <Fragment>\n//   //     <div className={classes.finder}>\n//   //       <input type='search' onChange={searchChangeHandler} />\n//   //       </div>\n//   //     <Users users={filteredUsers} />\n//   //   </Fragment>\n//   // );\n// };\n\nexport default UserFinder;\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;EACjC;EAGAK,WAAW,GAAG;IACZ;IACA,KAAKC,KAAL,GAAa;MACXC,aAAa,EAAE,EADJ;MAEXC,UAAU,EAAE;IAFD,CAAb;EAID,CAVgC,CAYjC;;;EACAC,iBAAiB,GAAG;IAClB;IACA,KAAKC,QAAL,CAAc;MAAEH,aAAa,EAAE,KAAKI,OAAL,CAAaC;IAA9B,CAAd;EACD;;EAEDC,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;IACvC,IAAIA,SAAS,CAACP,UAAV,KAAyB,KAAKF,KAAL,CAAWE,UAAxC,EAAoD;MAClD,KAAKE,QAAL,CAAc;QACZH,aAAa,EAAE,KAAKI,OAAL,CAAaC,KAAb,CAAmBI,MAAnB,CAA2BC,IAAD,IACvCA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,KAAKb,KAAL,CAAWE,UAA9B,CADa;MADH,CAAd;IAKD;EACF;;EAEDY,mBAAmB,CAACC,KAAD,EAAQ;IACzB,KAAKX,QAAL,CAAc;MAAEF,UAAU,EAAEa,KAAK,CAACC,MAAN,CAAaC;IAA3B,CAAd;EACD;;EAEDC,MAAM,GAAG;IACP,oBACE,QAAC,QAAD;MAAA,wBACE;QAAK,SAAS,EAAEvB,OAAO,CAACwB,MAAxB;QAAA,uBACE;UAAO,IAAI,EAAC,QAAZ;UAAqB,QAAQ,EAAE,KAAKL,mBAAL,CAAyBM,IAAzB,CAA8B,IAA9B;QAA/B;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE,QAAC,aAAD;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,KAAD;QAAO,KAAK,EAAE,KAAKpB,KAAL,CAAWC;MAAzB;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;AA1CgC,C,CA6CnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAnEMH,U,CAEGuB,W,GAAczB,Y;AAmEvB,eAAeE,UAAf"},"metadata":{},"sourceType":"module"}